@model WebApplication1.Helpers.PaginatedList<WebApplication1.Models.Instructor>
@{
    ViewData["Title"] = "Instructors";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Get current department filter from query string
    var currentDepartmentId = Context.Request.Query["departmentId"].ToString();
}

<h1>Instructors</h1>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<!-- 🔎 Search + Department Filter -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="row">
        <div class="col-md-4">
            <input name="searchString" class="form-control"
                   placeholder="Search by name or department"
                   value="@(ViewData["CurrentFilter"] ?? "")" />
        </div>
        <div class="col-md-3">
            <select name="departmentId" class="form-select" asp-items="ViewBag.Departments">
                <option value="">-- All Departments --</option>
            </select>
        </div>
        <div class="col-md-5">
            <button type="submit" class="btn btn-outline-primary">Filter</button>
            <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
        </div>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Salary</th>
            <th>Address</th>
            <th>Image</th>
            <th>Department</th>
            <th>Course</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Salary</td>
                    <td>@item.Address</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Image))
                        {
                            <img src="@item.Image" alt="Instructor Image" style="width:60px;height:60px;object-fit:cover;border-radius:4px;" />
                        }
                        else
                        {
                            <span class="text-muted">No image</span>
                        }
                    </td>
                    <td>@item.Department?.Name</td>
                    <td>@item.Course?.Name</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id"
                           onclick="return confirm('Are you sure you want to delete this instructor?');">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center text-muted">No instructors found.</td>
            </tr>
        }
    </tbody>
</table>

<!-- ✅ Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-departmentId="@currentDepartmentId"
                   asp-route-pageNumber="1">First</a>
            </li>
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-departmentId="@currentDepartmentId"
                   asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
            </li>

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-searchString="@ViewData["CurrentFilter"]"
                       asp-route-departmentId="@currentDepartmentId"
                       asp-route-pageNumber="@i">@i</a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-departmentId="@currentDepartmentId"
                   asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
            </li>
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-departmentId="@currentDepartmentId"
                   asp-route-pageNumber="@Model.TotalPages">Last</a>
            </li>
        </ul>
    </nav>
}